---
name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
# When pushing new commits, cancel any running builds on that branch
#
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release
  BUILD_DIR: Builds
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DISPLAY: :0
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  HOMEBREW_NO_INSTALL_CLEANUP: 1

# jobs are run in paralell on different machines
# all steps run in series
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            os: ubuntu-22.04
            pluginval-binary: ./pluginval
            ccache: ccache

    steps:

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1

      # This also starts up our "fake" display Xvfb, needed for pluginval
      - name: Install JUCE's Linux Deps
        run: |
          sudo apt-get update
          sudo apt install libasound2-dev
          sudo apt install libx11-dev libxinerama-dev
          sudo apt install libxext-dev libfreetype6-dev
          sudo apt install libwebkit2gtk-4.0-dev
          sudo apt install libglu1-mesa-dev xvfb ninja-build
          sudo /usr/bin/Xvfb $DISPLAY &

      - name: Checkout this repo and load submodules
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Python for gcovr
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: install gcovr 5.0
        run: |
          pip install gcovr==5.0


      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v2

      - name: Run build-wrapper
        run: |
          mkdir build
          cmake -S . -B build -G Ninja
          build-wrapper-linux-x86-64 --out-dir wrapperout cmake --build build --config Debug --parallel 4

      - name: ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: v3-${{ matrix.os }}-${{ matrix.type }}
          variant: ${{ matrix.ccache }}


      - name: Test
        working-directory: build
        run: ./Tests

      - name: Collect coverage
        run: |
          gcovr --sonarqube > coverage.xml

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="wrapperout" --define sonar.coverageReportPaths=coverage.xml

      - name: Read in .env from CMake
        shell: bash
        run: |
          cat .env # show us the config
          cat .env >> $GITHUB_ENV # pull in our PRODUCT_NAME, etc

      - name: Set additional env vars for next steps
        shell: bash
        run: |
          echo "ARTIFACTS_PATH=build/${{ env.PROJECT_NAME }}_artefacts/Debug" >> $GITHUB_ENV
          echo "VST3_PATH=${{ env.PROJECT_NAME }}_artefacts/Debug/VST3/${{ env.PRODUCT_NAME }}.vst3" >> $GITHUB_ENV
          echo "AU_PATH=${{ env.PROJECT_NAME }}_artefacts/Debug/AU/${{ env.PRODUCT_NAME }}.component" >> $GITHUB_ENV
          echo "AUV3_PATH=${{ env.PROJECT_NAME }}_artefacts/Debug/AUv3/${{ env.PRODUCT_NAME }}.appex" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=${{ env.PRODUCT_NAME }}-${{ env.VERSION }}-${{ matrix.name }}" >> $GITHUB_ENV

      - name: Pluginval
        working-directory: build
        shell: bash
        run: |
          curl -LO "https://github.com/Tracktion/pluginval/releases/download/v1.0.3/pluginval_${{ matrix.name }}.zip"
          7z x pluginval_${{ matrix.name }}.zip
          ${{ matrix.pluginval-binary }} --strictness-level 10 --verbose --validate "${{ env.VST3_PATH }}"

      - name: Zip
        if: ${{ matrix.name == 'Linux' }}
        working-directory: ${{ env.ARTIFACTS_PATH }}
        run: 7z a -tzip "${{ env.ARTIFACT_NAME }}.zip" .

      - name: Upload Zip (Linux)
        if: ${{ matrix.name == 'Linux' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}.zip
          path: '${{ env.ARTIFACTS_PATH }}/${{ env.ARTIFACT_NAME }}.zip'
